/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.netzeapp.screens;

import com.netzeapp.board.BoardPins;
import com.netzeapp.socket.socketClient;
import java.awt.Component;
import java.awt.PopupMenu;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;

/**
 *
 * @author williamvolkweis
 */
public class fRet extends javax.swing.JPanel {

    /**
     * Creates new form fRet
     */
    public fRet() {
        initComponents();
    }
      public void drawBtn(String Board, final socketClient sc){
        
        int y = 1;
        int i = 0;
        for (final BoardPins bp1 : sc.getPin(Board)) {
            JButton btn = new JButton(bp1.getPin());
            JLabel lb = new JLabel(bp1.getPin() + " - " + bp1.getType());
            if (bp1.getType().equalsIgnoreCase("GPIO")){
                btn.setText(bp1.getPin() + " - " + bp1.getType());
                btn.addActionListener( new ActionListener() {  
                    @Override  
                    public void actionPerformed( ActionEvent e ) {  
                        String d = JOptionPane.showInputDialog("Direction");
                        sc.send("system|echo "+ d + " > /sys/class/gpio/gpio" + bp1.getGpio()+ "/direction");
                    }
                });
            
                jp.add(btn);
            }
            else {
                jp.add(lb);
            }
            int x = 1;
            if((i % 2) != 0) {
                x = 130;
            }
            lb.setBounds(10 + x, 30 * y, 120, 20);
            btn.setBounds(10 + x, 30 * y, 120, 20);
            if (i % 2 != 0) y++; 
            i++;
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp = new javax.swing.JPanel();

        jp.setBorder(javax.swing.BorderFactory.createTitledBorder("Pin Header's"));

        javax.swing.GroupLayout jpLayout = new javax.swing.GroupLayout(jp);
        jp.setLayout(jpLayout);
        jpLayout.setHorizontalGroup(
            jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );
        jpLayout.setVerticalGroup(
            jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jp;
    // End of variables declaration//GEN-END:variables
}
